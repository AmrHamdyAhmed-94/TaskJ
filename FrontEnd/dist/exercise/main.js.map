{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AACuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;ACFqC;;;;;;;;;;;ICKjD,6EAA2E;IAAA,uDAAQ;IAAA,4DAAS;;;IAApF,2EAAc;IAAqD,0DAAQ;IAAR,yEAAQ;;;IAQnF,6EAAqE;IAAA,uDAAQ;IAAA,4DAAS;;;IAA9E,2EAAc;IAA+C,0DAAQ;IAAR,yEAAQ;;;IAwBjF,yEAAsC;IAAC,iEAAK;IAAA,4DAAK;;;IACjD,yEAAuC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAKzD,yEAAsC;IAAC,kEAAM;IAAA,4DAAK;;;IAClD,yEAAuC;IAAC,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAI1D,yEAAsC;IAAC,yEAAa;IAAA,4DAAK;;;IACzD,yEAAuC;IAAC,uDAAwB;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,mGAAwB;;;IAKhE,yEAAsC;IAAC,kEAAM;IAAA,4DAAK;;;IAClD,yEAAuC;IAAC,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAG5D,oEAA4D;;;IAC5D,oEAAkE;;AD/CjE,MAAM,YAAY;IAevB,YAAoB,oBAA2C,EAAC,WAAwB;QAApE,yBAAoB,GAApB,oBAAoB,CAAuB;QAd/D,qBAAgB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAC,aAAa,EAAG,OAAO,CAAC,CAAC;QAC7D,uBAAkB,GAAE,IAAI,uEAAkB,EAAE,CAAC;QAC7C,UAAK,GAAG,UAAU,CAAC;QACnB,kBAAa,GAAY,EAAE,CAAC;QAC5B,sBAAiB,GAAY,CAAC,CAAC;QAC/B,6BAAwB,GAAG,EAAE,CAAC;QAC9B,mCAA8B,GAAG,EAAE,CAAC;QAEpC,WAAM,GAAU,CAAC,CAAC;QAClB,oBAAe,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QACnC,aAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACnC,cAAS,GAAG,CAAC,CAAC;QAKZ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC;YACnC,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,EAAE;SACV,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,MAAM,GAAG,kBAAI,KAAK,CAAW,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,MAAM,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,IAAuB,EAAE,EAAE;YAC7E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,CAAC,eAAe,GAAG,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE;YACzD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC;YACvD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM,CAAC,WAAW,CAAC;YAC1E,OAAO,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC,CAAyC,CAAC;IAE7C,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAwB,EAAE,EAAE;YAC5G,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,GAAE;gBAC7B,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5C,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;YACxF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAE9E,CAAC,CAAC,CAAC;IACL,CAAC;IACO,2BAA2B,CAAC,OAAiB;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClG,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QAC1C,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACnE,OAAO,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC;QAE7F,4CAA4C;IAChD,CAAC;IACC,eAAe,CAAC,OAAO,EAAE,GAAG;QAC1B,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC/B,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aACxB;YACD,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,EAAE,CAAC;IACtC,CAAC;IACD,eAAe,CAAC,KAA2B;QACzC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;;wEAjFU,YAAY;0GAAZ,YAAY;QCfvB,yEAA4B;QAC1B,sEAAK;QAEH,0EAAsD;QACpD,oFAA4C;QAC1C,4EAAW;QAAA,uEAAY;QAAA,4DAAY;QACnC,4EAAuD;QACrD,4EAAiB;QAAA,+EAAoB;QAAA,4DAAS;QAC9C,8GAA4F;QAC9F,4DAAS;QACX,4DAAiB;QAEjB,qFAA4C;QAC1C,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,6EAAiD;QAC/C,6EAAiB;QAAA,8EAAkB;QAAA,4DAAS;QAC5C,gHAAsF;QACxF,4DAAS;QACX,4DAAiB;QAEnB,4DAAO;QACP,6EAA8D;QAAzB,qIAAS,kBAAc,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAa9E,4DAAM;QAEN,4EAA6E;QAG3E,4EAAkC;QAChC,yGAAiD;QACjD,yGAA8D;QAChE,qEAAe;QAGf,6EAAmC;QACjC,yGAAkD;QAClD,yGAA+D;QACjE,qEAAe;QAEf,6EAAyC;QACvC,yGAAyD;QACzD,yGAAqE;QACvE,qEAAe;QAGf,6EAAmC;QACjC,yGAAkD;QAClD,yGAA+D;QACjE,qEAAe;QAEf,yGAA4D;QAC5D,yGAAkE;QACpE,4DAAQ;QAER,qFAM8B;QAL9B,gJAAU,2BAAuB,IAAC;QAMtC,4DAAgB;QACd,4DAAM;;QAtE0B,0DAAyB;QAAzB,sFAAyB;QAKP,0DAAiC;QAAjC,uGAAiC;QAQjC,0DAA2B;QAA3B,iGAA2B;QAoB1D,0DAAiC;QAAjC,8FAAiC;QAyB5B,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAK7D,0DAAiB;QAAjB,8EAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEqC;AACF;AACA;AACT;AACmB;AACA;AACa;AACtB;AACS;AACP;AACF;AACE;;AAuBpD,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YAdJ;YACP,oEAAa;YACb,kEAAgB;YAChB,iEAAgB;YAChB,uDAAW;YACX,+DAAmB;YACnB,mEAAc;YACd,4EAAkB;YAClB,qEAAe;YACf,yFAAuB;YACvB,sEAAe;YACf,oEAAc;YACd,4EAAkB;SACnB;mIAIU,SAAS,mBAnBlB,wDAAY,aAGZ,oEAAa;QACb,kEAAgB;QAChB,iEAAgB;QAChB,uDAAW;QACX,+DAAmB;QACnB,mEAAc;QACd,4EAAkB;QAClB,qEAAe;QACf,yFAAuB;QACvB,sEAAe;QACf,oEAAc;QACd,4EAAkB;;;;;;;;;;;;;;;;;;;;;AC7B+B;AAEP;AACT;AACsB;;;AAE3D,MAAM,oBAAoB,GAAG,iBAAiB,CAAC;AAC/C,MAAM,oBAAoB,GAAG,iBAAiB,CAAC;AAKxC,MAAM,oBAAoB;IAE/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4EAAkB,GAAC,oBAAoB,CAAC,CAAC,IAAI,CAChE,mDAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,mEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,IAAa,EAAG,IAAa;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4EAAkB,GAAC,oBAAoB,GAAC,SAAS,IAAI,SAAS,IAAI,EAAE,CAAC,CAAC,IAAI,CAC7F,mDAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,mEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACJ,CAAC;IAEO,WAAW,CAAC,GAAa;QAC/B,MAAM,IAAI,GAAG,GAAG,CAAC;QACjB,OAAO,IAAI,IAAI,EAAG,CAAC;IACrB,CAAC;IAEO,WAAW,CAAC,KAAwB;QAC1C,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC1D;aAAM;YACL,OAAO,CAAC,KAAK,CACX,yBAAyB,KAAK,CAAC,MAAM,IAAI;gBACzC,aAAa,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;SAC/B;QACD,OAAO,gDAAU,CACf,iDAAiD,CAAC,CAAC;IACvD,CAAC;;wFAjCU,oBAAoB;qHAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;;;;;;;;;;;;;;;ACXpB,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAC,6BAA6B;CACrC,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;AChBvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/RestConsuming.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ViewChild } from '@angular/core'\nimport { RestConsumingService } from './services/RestConsuming.service';\nimport * as paginator from '@angular/material/paginator';\nimport { tap } from 'rxjs/operators';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Customer, CustomersResponse } from './Classes/GetCustomersResponse';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { CountriesReponse, Country } from './Classes/GetCountriesResponse';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  displayedColumns = ['name', 'phone','countryName' , 'state'];\n  customerDatasource= new MatTableDataSource();\n  title = 'exercise';\n  countriesData: Country[]=[];\n  selectedCountryId : number = 0;\n  filterSelectOptionsState = [];\n  filterSelectOptionsCountryName = [];\n\n  length:number = 0;\n  pageSizeOptions = [5, 10, 25, 100];\n  pageSize = this.pageSizeOptions[0];\n  pageIndex = 0;\n  \n  readonly formControl: AbstractControl;\n  constructor(private restConsumingService : RestConsumingService,formBuilder: FormBuilder ){ \n\n    this.formControl = formBuilder.group({\n      countryName: '',\n      state: '',\n    })\n    this.formControl.valueChanges.subscribe(value => {\n      console.log(value);\n      const filter = {...value} as string;\n      this.customerDatasource.filter = filter;\n    });\n  }\n\n\n  ngOnInit(){\n    this.restConsumingService.getCountries().subscribe((data : CountriesReponse) => {\n      this.countriesData = data.countryList;\n    });\n    this.getCustomerData();\n    this.customerDatasource.filterPredicate = ((data, filter) => {\n       const a = !filter.state || data.state === filter.state;\n       const b = !filter.countryName || data.countryName === filter.countryName;\n      return a && b;\n    }) as (PeriodicElement, string) => boolean;\n    \n  }\n\n  private getCustomerData(){\n    this.restConsumingService.getCustomers(this.pageIndex , this.pageSize).subscribe((data : CustomersResponse) => {\n      this.length = data.totalElements;\n      data.content.forEach(customer=>{\n        this.setCountryNameAndStateValue(customer);\n      });\n      this.customerDatasource.data = data.content;\n      this.filterSelectOptionsCountryName = this.getFilterObject(data.content, 'countryName');\n      this.filterSelectOptionsState = this.getFilterObject(data.content, 'state');\n\n    });\n  }\n  private setCountryNameAndStateValue(customr: Customer): void{\n    const country = this.countriesData.filter(a => customr.phone.startsWith(`(${a.countryCode})`))[0];\n    customr.countryName = country.countryName;\n    country.countryRegex = country.countryRegex.replace(/\\\\\\\\/g, '\\\\');\n    customr.state = new RegExp(country.countryRegex).test(customr.phone) ? 'Valid' : 'Not-Valid';\n\n    // condattion on cuntry code with cust phone\n}\n  getFilterObject(fullObj, key) {\n    const uniqChk = [];\n    fullObj.filter((obj) => {\n      if (!uniqChk.includes(obj[key])) {\n        uniqChk.push(obj[key]);\n      }\n      return obj;\n    });\n    return uniqChk;\n  }\n  resetFilters() {\n    this.formControl.reset();\n    this.customerDatasource.filter = \"\";\n  }\n  handlePageEvent(event : paginator.PageEvent){\n    this.length = event.length;\n    this.pageSize = event.pageSize;\n    this.pageIndex = event.pageIndex;\n    this.getCustomerData();\n  }\n \n}\n","\n\n  <div style=\"padding: 50px;\">\n    <div>\n\n      <form style=\"display: flex\" [formGroup]=\"formControl\">\n        <mat-form-field  style=\"margin-left: 15px;\">\n          <mat-label>Filter State</mat-label>\n          <select matNativeControl formControlName=\"countryName\">\n            <option value=\"\">-- Select Country --</option>\n            <option [value]=\"item\" *ngFor=\"let item of filterSelectOptionsCountryName\">{{item}}</option>\n          </select>\n        </mat-form-field>\n\n        <mat-form-field  style=\"margin-left: 15px;\">\n          <mat-label>Filter State</mat-label>\n          <select matNativeControl formControlName=\"state\">\n            <option value=\"\">-- Select State --</option>\n            <option [value]=\"item\" *ngFor=\"let item of filterSelectOptionsState\">{{item}}</option>\n          </select>\n        </mat-form-field>\n    \n      </form>\n      <button mat-flat-button color=\"warn\" (click)=\"resetFilters()\">Reset</button>\n      \n<!-- \n      <mat-form-field *ngFor=\"let filter of filterSelectObj\" style=\"margin-left: 15px;\">\n        <mat-label>Filter {{filter.name}}</mat-label>\n        <select matNativeControl name=\"{{filter.columnProp}}\" [(ngModel)]=\"filter.modelValue\"\n          (change)=\"filterChange(filter,$event)\">\n          <option value=\"\">-- Select {{filter.name}} --</option>\n          <option [value]=\"item\" *ngFor=\"let item of filter.options\">{{item}}</option>\n        </select>\n      </mat-form-field>\n      &nbsp;\n      <button mat-flat-button color=\"warn\" (click)=\"resetFilters()\">Reset</button> -->\n    </div>\n\n    <table mat-table [dataSource]=\"customerDatasource\" class=\"mat-elevation-z8\" >\n \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n  \n      <!-- Phone Column -->\n      <ng-container matColumnDef=\"phone\">\n        <th mat-header-cell *matHeaderCellDef> Phone </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.phone}} </td>\n      </ng-container>\n      <!-- Country Name Column -->\n      <ng-container matColumnDef=\"countryName\">\n        <th mat-header-cell *matHeaderCellDef> Country Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.countryName}} </td>\n      </ng-container>\n      \n      <!-- State Name Column -->\n      <ng-container matColumnDef=\"state\">\n        <th mat-header-cell *matHeaderCellDef> State </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.state}} </td>\n      </ng-container>\n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator \n    (page) = \"handlePageEvent($event)\"\n    [length]=\"length\"\n    [pageIndex] = \"0\"\n    [pageSize]=\"pageSize\"\n    [pageSizeOptions]=\"pageSizeOptions\"\n    [showFirstLastButtons]=\"true\">\n</mat-paginator>\n  </div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport {  MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatTableModule,\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/internal/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nconst getCountriesEndpoint = 'getallcountries';\nconst getCustomersEndPoint = 'getallcustomers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestConsumingService {\n\n  constructor(private http: HttpClient) { }\n\n  getCountries(): Observable<any> {\n    return this.http.get(environment.apiUrl+getCountriesEndpoint).pipe(\n      map(this.extractData),\n      catchError(this.handleError)\n    );\n  }\n\n  getCustomers(page : number , size : number): Observable<any> {\n    return this.http.get(environment.apiUrl+getCustomersEndPoint+`?page=${page}&size=${size}`).pipe(\n      map(this.extractData),\n      catchError(this.handleError)\n    );\n  }\n\n  private extractData(res: Response): any {\n    const body = res;   \n    return body || { };\n  }\n\n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:\"http://localhost:9090/data/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}